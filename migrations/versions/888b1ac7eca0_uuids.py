"""uuids

Revision ID: 888b1ac7eca0
Revises: 
Create Date: 2025-07-01 14:42:23.937072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '888b1ac7eca0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mixwal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bacap_stream', sa.Uuid(), nullable=False),
    sa.Column('envelope_hash', sa.LargeBinary(), nullable=False),
    sa.Column('destination', sa.LargeBinary(), nullable=False),
    sa.Column('encrypted_payload', sa.LargeBinary(), nullable=False),
    sa.Column('next_message_index', sa.LargeBinary(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bacap_stream'),
    sa.UniqueConstraint('envelope_hash')
    )
    op.create_table('sentlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('writecapwal',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('write_cap', sa.LargeBinary(), nullable=True),
    sa.Column('next_index', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('readcapwal',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('write_cap_id', sa.Uuid(), nullable=True),
    sa.Column('read_cap', sa.LargeBinary(), nullable=True),
    sa.Column('next_index', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['write_cap_id'], ['writecapwal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('readcapwal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_readcapwal_write_cap_id'), ['write_cap_id'], unique=False)

    op.create_table('conversationpeer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('read_cap_id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['read_cap_id'], ['readcapwal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversationpeer', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversationpeer_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversationpeer_read_cap_id'), ['read_cap_id'], unique=False)

    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('own_peer_id', sa.Integer(), nullable=False),
    sa.Column('write_cap', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['own_peer_id'], ['conversationpeer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversation', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversation_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_own_peer_id'), ['own_peer_id'], unique=False)

    op.create_table('conversationlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('conversation_peer_id', sa.Integer(), nullable=False),
    sa.Column('conversation_order', sa.Integer(), nullable=False),
    sa.Column('payload', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['conversation_peer_id'], ['conversationpeer.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('conversation_id', 'conversation_order', name='uniq_conv_id_and_order')
    )
    with op.batch_alter_table('conversationlog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversationlog_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversationlog_conversation_order'), ['conversation_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversationlog_conversation_peer_id'), ['conversation_peer_id'], unique=False)

    op.create_table('conversationpeerlink',
    sa.Column('conversation_peer_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['conversation_peer_id'], ['conversationpeer.id'], ),
    sa.PrimaryKeyConstraint('conversation_peer_id', 'conversation_id')
    )
    op.create_table('plaintextwal',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('after_id', sa.Uuid(), nullable=True),
    sa.Column('after_stream', sa.Uuid(), nullable=True),
    sa.Column('bacap_stream', sa.Uuid(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('bacap_payload', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['after_id'], ['plaintextwal.id'], ),
    sa.ForeignKeyConstraint(['after_stream'], ['plaintextwal.bacap_stream'], ),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('plaintextwal', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plaintextwal_after_id'), ['after_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_plaintextwal_after_stream'), ['after_stream'], unique=False)
        batch_op.create_index(batch_op.f('ix_plaintextwal_bacap_stream'), ['bacap_stream'], unique=False)
        batch_op.create_index(batch_op.f('ix_plaintextwal_conversation_id'), ['conversation_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('plaintextwal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plaintextwal_conversation_id'))
        batch_op.drop_index(batch_op.f('ix_plaintextwal_bacap_stream'))
        batch_op.drop_index(batch_op.f('ix_plaintextwal_after_stream'))
        batch_op.drop_index(batch_op.f('ix_plaintextwal_after_id'))

    op.drop_table('plaintextwal')
    op.drop_table('conversationpeerlink')
    with op.batch_alter_table('conversationlog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversationlog_conversation_peer_id'))
        batch_op.drop_index(batch_op.f('ix_conversationlog_conversation_order'))
        batch_op.drop_index(batch_op.f('ix_conversationlog_conversation_id'))

    op.drop_table('conversationlog')
    with op.batch_alter_table('conversation', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_own_peer_id'))
        batch_op.drop_index(batch_op.f('ix_conversation_name'))

    op.drop_table('conversation')
    with op.batch_alter_table('conversationpeer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversationpeer_read_cap_id'))
        batch_op.drop_index(batch_op.f('ix_conversationpeer_name'))

    op.drop_table('conversationpeer')
    with op.batch_alter_table('readcapwal', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_readcapwal_write_cap_id'))

    op.drop_table('readcapwal')
    op.drop_table('writecapwal')
    op.drop_table('sentlog')
    op.drop_table('mixwal')
    # ### end Alembic commands ###
